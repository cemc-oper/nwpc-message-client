// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message_broker.proto

package messagebroker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RabbitMQTarget struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Exchange             string   `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	RouteKey             string   `protobuf:"bytes,3,opt,name=route_key,json=routeKey,proto3" json:"route_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RabbitMQTarget) Reset()         { *m = RabbitMQTarget{} }
func (m *RabbitMQTarget) String() string { return proto.CompactTextString(m) }
func (*RabbitMQTarget) ProtoMessage()    {}
func (*RabbitMQTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_5323d5d3a4035725, []int{0}
}

func (m *RabbitMQTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RabbitMQTarget.Unmarshal(m, b)
}
func (m *RabbitMQTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RabbitMQTarget.Marshal(b, m, deterministic)
}
func (m *RabbitMQTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RabbitMQTarget.Merge(m, src)
}
func (m *RabbitMQTarget) XXX_Size() int {
	return xxx_messageInfo_RabbitMQTarget.Size(m)
}
func (m *RabbitMQTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_RabbitMQTarget.DiscardUnknown(m)
}

var xxx_messageInfo_RabbitMQTarget proto.InternalMessageInfo

func (m *RabbitMQTarget) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *RabbitMQTarget) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *RabbitMQTarget) GetRouteKey() string {
	if m != nil {
		return m.RouteKey
	}
	return ""
}

type Message struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_5323d5d3a4035725, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RabbitMQMessage struct {
	Target               *RabbitMQTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Message              *Message        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RabbitMQMessage) Reset()         { *m = RabbitMQMessage{} }
func (m *RabbitMQMessage) String() string { return proto.CompactTextString(m) }
func (*RabbitMQMessage) ProtoMessage()    {}
func (*RabbitMQMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5323d5d3a4035725, []int{2}
}

func (m *RabbitMQMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RabbitMQMessage.Unmarshal(m, b)
}
func (m *RabbitMQMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RabbitMQMessage.Marshal(b, m, deterministic)
}
func (m *RabbitMQMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RabbitMQMessage.Merge(m, src)
}
func (m *RabbitMQMessage) XXX_Size() int {
	return xxx_messageInfo_RabbitMQMessage.Size(m)
}
func (m *RabbitMQMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RabbitMQMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RabbitMQMessage proto.InternalMessageInfo

func (m *RabbitMQMessage) GetTarget() *RabbitMQTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *RabbitMQMessage) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type Response struct {
	ErrorNo              int32    `protobuf:"varint,1,opt,name=error_no,json=errorNo,proto3" json:"error_no,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5323d5d3a4035725, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetErrorNo() int32 {
	if m != nil {
		return m.ErrorNo
	}
	return 0
}

func (m *Response) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*RabbitMQTarget)(nil), "messagebroker.RabbitMQTarget")
	proto.RegisterType((*Message)(nil), "messagebroker.Message")
	proto.RegisterType((*RabbitMQMessage)(nil), "messagebroker.RabbitMQMessage")
	proto.RegisterType((*Response)(nil), "messagebroker.Response")
}

func init() { proto.RegisterFile("message_broker.proto", fileDescriptor_5323d5d3a4035725) }

var fileDescriptor_5323d5d3a4035725 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x5d, 0x4b, 0xc3, 0x40,
	0x10, 0xb4, 0x7e, 0xe4, 0x63, 0xdb, 0x28, 0xac, 0x52, 0x63, 0xa5, 0x22, 0xf1, 0xc5, 0xa7, 0x20,
	0x11, 0xff, 0x80, 0x8f, 0x4a, 0x45, 0x4f, 0xdf, 0xc3, 0xc5, 0x2e, 0x51, 0x8a, 0xb9, 0xb2, 0x77,
	0x8a, 0xf5, 0xd7, 0x0b, 0x9b, 0x8b, 0xd8, 0x40, 0xdf, 0x76, 0x67, 0xe6, 0x66, 0x66, 0x39, 0x38,
	0xfa, 0x20, 0x6b, 0x75, 0x4d, 0x65, 0xc5, 0x66, 0x41, 0x9c, 0x2f, 0xd9, 0x38, 0x83, 0x89, 0x47,
	0x5b, 0x30, 0xd3, 0xb0, 0xaf, 0x74, 0x55, 0xbd, 0xbb, 0xd9, 0xd3, 0x8b, 0xe6, 0x9a, 0x1c, 0x8e,
	0x21, 0xb0, 0xc4, 0x5f, 0xc4, 0xe9, 0xe0, 0x7c, 0x70, 0x19, 0x2b, 0xbf, 0xe1, 0x04, 0x22, 0xfa,
	0x7e, 0x7d, 0xd3, 0x4d, 0x4d, 0xe9, 0xb6, 0x30, 0x7f, 0x3b, 0x9e, 0x42, 0xcc, 0xe6, 0xd3, 0x51,
	0xb9, 0xa0, 0x55, 0xba, 0xd3, 0x92, 0x02, 0xdc, 0xd3, 0x2a, 0x9b, 0x42, 0x38, 0x6b, 0x33, 0x11,
	0x61, 0x77, 0xae, 0x9d, 0x16, 0xe7, 0x91, 0x92, 0x39, 0xfb, 0x81, 0x83, 0xae, 0x41, 0x27, 0xbb,
	0x81, 0xc0, 0x49, 0x19, 0x11, 0x0e, 0x8b, 0x69, 0xbe, 0x56, 0x3a, 0x5f, 0x6f, 0xac, 0xbc, 0x18,
	0xaf, 0x20, 0xf4, 0x3a, 0x29, 0x38, 0x2c, 0xc6, 0xbd, 0x77, 0xde, 0x5f, 0x75, 0xb2, 0xec, 0x0e,
	0x22, 0x45, 0x76, 0x69, 0x1a, 0x4b, 0x78, 0x02, 0x11, 0x31, 0x1b, 0x2e, 0x1b, 0x23, 0xb1, 0x7b,
	0x2a, 0x94, 0xfd, 0xc1, 0xe0, 0x05, 0x24, 0x2d, 0xf5, 0xdf, 0x3e, 0x56, 0x23, 0x01, 0xbd, 0x69,
	0xa1, 0x21, 0xf1, 0xe3, 0xad, 0xa4, 0xe1, 0x23, 0x1c, 0x3e, 0x53, 0x33, 0xef, 0x1f, 0x77, 0xb6,
	0xe1, 0x18, 0xcf, 0x4f, 0x8e, 0xfb, 0xbc, 0x2f, 0x98, 0x6d, 0x55, 0x81, 0x7c, 0xe1, 0xf5, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0xae, 0x27, 0x79, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageBrokerClient is the client API for MessageBroker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageBrokerClient interface {
	SendRabbitMQMessage(ctx context.Context, in *RabbitMQMessage, opts ...grpc.CallOption) (*Response, error)
}

type messageBrokerClient struct {
	cc *grpc.ClientConn
}

func NewMessageBrokerClient(cc *grpc.ClientConn) MessageBrokerClient {
	return &messageBrokerClient{cc}
}

func (c *messageBrokerClient) SendRabbitMQMessage(ctx context.Context, in *RabbitMQMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/messagebroker.MessageBroker/SendRabbitMQMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageBrokerServer is the server API for MessageBroker service.
type MessageBrokerServer interface {
	SendRabbitMQMessage(context.Context, *RabbitMQMessage) (*Response, error)
}

// UnimplementedMessageBrokerServer can be embedded to have forward compatible implementations.
type UnimplementedMessageBrokerServer struct {
}

func (*UnimplementedMessageBrokerServer) SendRabbitMQMessage(ctx context.Context, req *RabbitMQMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRabbitMQMessage not implemented")
}

func RegisterMessageBrokerServer(s *grpc.Server, srv MessageBrokerServer) {
	s.RegisterService(&_MessageBroker_serviceDesc, srv)
}

func _MessageBroker_SendRabbitMQMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RabbitMQMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageBrokerServer).SendRabbitMQMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messagebroker.MessageBroker/SendRabbitMQMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageBrokerServer).SendRabbitMQMessage(ctx, req.(*RabbitMQMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageBroker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messagebroker.MessageBroker",
	HandlerType: (*MessageBrokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRabbitMQMessage",
			Handler:    _MessageBroker_SendRabbitMQMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message_broker.proto",
}
